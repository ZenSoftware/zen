apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zen-pg-pv-claim
  labels:
    app: zen-pg
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: managed-premium
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zen-pg
  labels:
    app: zen-pg
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zen-pg
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: zen-pg
    spec:
      containers:
        - name: zen-pg
          image: postgres:15
          resources:
            requests:
              cpu: "200m"
              memory: "2Gi"
            limits:
              cpu: "1000m"
              memory: "4Gi"
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: pg-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pg-secret
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 5432
              name: zen-pg-port
          volumeMounts:
            - name: zen-pg-pv-claim
              readOnly: false
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: zen-pg-pv-claim
          persistentVolumeClaim:
            claimName: zen-pg-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: zen-pg-svc
spec:
  ports:
    - name: postgresql
      port: 5432
      targetPort: zen-pg-port
      protocol: TCP
  selector:
    app: zen-pg
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-tcp-services
data:
  5432: "default/zen-pg-svc:5432"
